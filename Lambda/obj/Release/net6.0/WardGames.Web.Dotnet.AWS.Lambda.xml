<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WardGames.Web.Dotnet.AWS.Lambda</name>
    </assembly>
    <members>
        <member name="T:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.APIGatewayEventHelper">
            <summary>
            Lambda에서 APIGatewayEvents를 처리할 때 유용하게 사용할 수 있는 Helper 함수를 모아둔 클래스
            </summary>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.APIGatewayEventHelper.GetApiRequestBody``1(Amazon.Lambda.APIGatewayEvents.APIGatewayProxyRequest)">
            <summary>
            lambda의 입력으로 APIGatewayProxyRequest를 받을 때, 예외 검사 후 Body를 Deserialize하여 반환하는 Helper
            </summary>
            <param name="request">APIGatewayProxyRequest 요청</param>
            <typeparam name="T">반환 클래스</typeparam>
            <returns>Request의 body</returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.APIGatewayEventHelper.GenerateResponse(System.Object,System.Int32)">
            <summary>
            APIGatewayProxyResponse 응답 생성
            </summary>
            <param name="data">응답에 포함할 데이터</param>
            <param name="statusCode">응답 상태 코드</param>
            <returns>APIGatewayProxyResponse</returns>
        </member>
        <member name="T:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2">
            <summary>
            AWS Lambda에서 APIGatway로 들어온 Request/Response를 처리하는 핸들러들의 base class <br/>
            기본 요청/응답 프로토콜은 HTTP <br/>
            단, 요청 처리의 경우 APIGatewayProxyRequest를 받아서 처리하고, 응답 처리의 경우 APIGatewayProxyResponse를 반환한다. <br/>
            </summary>
            <typeparam name="TRequest">ApiRequestBase 내부 Request 데이터 타입</typeparam>
            <typeparam name="TResponse">ApiResponseBase 내부 Response 데이터 타입</typeparam>
        </member>
        <member name="F:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2._dynamoDB">
            <summary>
            DynamoDb client (사용할 경우에만 초기화)
            </summary>
        </member>
        <member name="F:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2._requestData">
            <summary>
            요청 데이터
            </summary>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.#ctor(Amazon.Lambda.APIGatewayEvents.APIGatewayProxyRequest)">
            <summary>
            Default constructor
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB,Amazon.Lambda.APIGatewayEvents.APIGatewayProxyRequest)">
            <summary>
            Default constructor (DynamoDB 초기화 전용)
            </summary>
            <param name="dynamoDB">DynamoDb client</param>
            <param name="request">APIGatewayProxyRequest.</param>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.CreateResponse">
            <summary>
            DynamoDb 관련 요청에 맞는 Response를 생성
            </summary>
            <returns>완전한 APIGatewayProxyResponse 응답 반환</returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.GenerateResponseTask">
            <summary>
            응답 생성을 수행하는 메서드 (서브 클래스에서 구체화)
            </summary>
            <returns></returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.CreateSuccessApiResponse(`1)">
            <summary>
            성공 응답 생성
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.ApiRequestHandlerBase`2.CreateFailApiResponse(System.String)">
            <summary>
            실패 응답 생성
            </summary>
            <param name="errMsg"></param>
            <returns></returns>
        </member>
        <member name="T:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.WssRequestHandlerBase`2">
            <summary>
            AWS Lambda에서 APIGatway 중 로 들어온 Request/Response를 처리하는 핸들러들의 base class <br/>
            </summary>
            <typeparam name="WssRequest"></typeparam>
            <typeparam name="WssResponse"></typeparam>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.WssRequestHandlerBase`2.#ctor(Amazon.Lambda.APIGatewayEvents.APIGatewayProxyRequest,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="request"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.WssRequestHandlerBase`2.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB,Amazon.Lambda.APIGatewayEvents.APIGatewayProxyRequest,System.String)">
            <summary>
            Default constructor (DynamoDB 초기화 전용)
            </summary>
            <param name="dynamoDB"></param>
            <param name="request"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.WssRequestHandlerBase`2.CreateSuccessApiResponse(`1)">
            <summary>
            성공 WebSocketResponse를 생성
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WardGames.Web.Dotnet.AWS.Lambda.APIGatewayEvents.WssRequestHandlerBase`2.CreateFailApiResponse(System.String)">
            <summary>
            실패 WebSocketResponse를 생성
            </summary>
            <param name="errMsg"></param>
            <returns></returns>
        </member>
    </members>
</doc>
